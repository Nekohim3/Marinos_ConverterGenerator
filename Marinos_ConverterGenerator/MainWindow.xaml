<Window x:Class="Marinos_ConverterGenerator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Marinos_ConverterGenerator"
        mc:Ignorable="d"
        Title="MainWindow" Height="720" Width="1280" d:DataContext="{d:DesignInstance local:MWVM}">
    <Window.Resources>
        <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="300" Width="*"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition MinWidth="500" Width="5*"/>
        </Grid.ColumnDefinitions>
        <!-- настройки -->
        <GridSplitter Grid.Column="1" Width="5" ResizeBehavior="PreviousAndNext" HorizontalAlignment="Stretch"/>
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <!-- название сущности -->
            <DockPanel Grid.Row="0" LastChildFill="true" Margin="5,0,5,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Название сущности (XXX_):" Margin="5"/>
                    <TextBox Grid.Column="1" Width="auto" Text="{Binding Path=EntityName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock Grid.Row="1" Text="Название сущности (xxx_):" Margin="5"/>
                    <TextBox Grid.Row="1" Grid.Column="1" Width="auto" Text="{Binding Path=SmallEntityName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
            </DockPanel>
            <CheckBox Grid.Row="1" Content="Экспорт на судно" HorizontalAlignment="Left" Margin="5,0,5,0" IsChecked="{Binding Path=ExportToShip}"/>
            <CheckBox Grid.Row="2" Content="Экспорт в компанию" HorizontalAlignment="Left" Margin="5,0,5,0" IsChecked="{Binding Path=ExportToCompany}"/>
            <CheckBox Grid.Row="3" Content="IsOwnedByShip" HorizontalAlignment="Left" Margin="5,0,5,0" IsChecked="{Binding Path=IsOwnedByShip, Mode=TwoWay}"/>
            <Grid Grid.Row="4">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <CheckBox Content="IsTree" HorizontalAlignment="Left" Margin="5,0,5,0" IsChecked="{Binding Path=IsTree, Mode=TwoWay}"/>
                <!--<Button Content="ReadMe" Width="50" HorizontalAlignment="Right" Padding="0" Command="{Binding TREEHALP}"/>-->
                <TextBlock Grid.Row="1" Text="Название родительского нав. свойства" Visibility="{Binding IsTree, Converter={StaticResource BoolToVisibilityConverter}}"/>
                <TextBox Grid.Row="2" Text="{Binding ParentName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Visibility="{Binding IsTree, Converter={StaticResource BoolToVisibilityConverter}}"/>
            </Grid>
            <TextBlock Grid.Row="5" Text="Свойства сущности (только экспортируемые)" HorizontalAlignment="Center" Margin="5,0,5,0"/>
            <ListBox Grid.Row="6" ItemsSource="{Binding Path=Properties, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding Path=SelectedProperty, UpdateSourceTrigger=PropertyChanged}">
                <ListBox.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#0090ff"/>
                </ListBox.Resources>
            </ListBox>
            <Grid Grid.Row="7">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Название свойства" Margin="5,0,5,0"/>
                <TextBlock Grid.Column="1" Text="Тип свойства" Margin="5,0,5,0" HorizontalAlignment="Right"/>
                <CheckBox Grid.Column="2" Content="null" Margin="5,0,5,0" IsChecked="{Binding Path=NewProperty.Nullable, Mode=TwoWay}"/>

            </Grid>
            <Grid Grid.Row="8">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBox Text="{Binding Path=NewProperty.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,0,5,0"/>
                <ComboBox Grid.Column="1" Margin="5,0,5,0" ItemsSource="{Binding PropertyTypes}" SelectedItem="{Binding NewProperty.Type, Mode=TwoWay}"/>
            </Grid>
            <DockPanel Grid.Row="9" LastChildFill="False">
                <Button Content="Добавить" Margin="5" Padding="3" Command="{Binding AddNewPropertyCommand}"/>
                <Button Content="Сохранить" Margin="5" Padding="3" Command="{Binding SavePropertyCommand}"/>
                <Button Content="Удалить" Margin="5" Padding="3" Command="{Binding RemoveSelectedPropertyCommand}"/>
                <Button Content="Очистить" Margin="5" Padding="3" Command="{Binding ClearPropertiesCommand}"/>
            </DockPanel>
            <TextBlock Grid.Row="10" Text="Связанные сущности" HorizontalAlignment="Center" Margin="5,0,5,0"/>
            <ListBox Grid.Row="11" ItemsSource="{Binding Path=FK_Entities, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding Path=SelectedFKEntity, UpdateSourceTrigger=PropertyChanged}">
                <ListBox.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#0090ff"/>
                </ListBox.Resources>
            </ListBox>
            <DockPanel Grid.Row="12">
                <TextBlock Text="Название связанной сущности" Margin="5,0,5,0"/>
                <CheckBox Content="Nullable" HorizontalAlignment="Right" Margin="5,0,5,0" IsChecked="{Binding Path=NewFKEntity.Nullable, Mode=TwoWay}"/>
            </DockPanel>
            <TextBox Grid.Row="13" Text="{Binding Path=NewFKEntity.EntityName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,0,5,0"/>
            <TextBlock Grid.Row="14" Text="Название навигационного свойства" Margin="5,0,5,0"/>
            <TextBox Grid.Row="15" Text="{Binding Path=NewFKEntity.NavigationPropertyName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,0,5,0"/>
            <DockPanel Grid.Row="16" LastChildFill="False">
                <Button Content="Добавить" Margin="5" Padding="3" Command="{Binding AddNewFKEntityCommand}"/>
                <Button Content="Сохранить" Margin="5" Padding="3" Command="{Binding SaveFKEntityCommand}"/>
                <Button Content="Удалить" Margin="5" Padding="3" Command="{Binding RemoveSelectedFKEntityCommand}"/>
                <Button Content="Очистить" Margin="5" Padding="3" Command="{Binding ClearFKEntitiesCommand}"/>
            </DockPanel>
            
        </Grid>
        <!-- preview -->
        <Grid Grid.Column="2">
            <TabControl>
                <TabItem Header="Converter">
                    <avalonEdit:TextEditor
                        Name="ConverterTextEditor"
                        SyntaxHighlighting="C#"
                        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
                        FontFamily="Consolas"
                        IsReadOnly="True"
                        FontSize="10pt"/>
                </TabItem>
                <TabItem Header="SeriazableEntity">
                    <avalonEdit:TextEditor
                        Name="SeriazableEntityTextEditor"
                        SyntaxHighlighting="C#"
                        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
                        FontFamily="Consolas"
                        IsReadOnly="True"
                        FontSize="10pt"/>
                </TabItem>
                <TabItem Header="Loader">
                    <avalonEdit:TextEditor
                        Name="LoaderTextEditor"
                        SyntaxHighlighting="C#"
                        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
                        FontFamily="Consolas"
                        IsReadOnly="True"
                        FontSize="10pt"/>
                </TabItem>
                <TabItem Header="Entity">
                    <avalonEdit:TextEditor
                        Name="EntityTextEditor"
                        SyntaxHighlighting="C#"
                        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
                        FontFamily="Consolas"
                        IsReadOnly="True"
                        FontSize="10pt"/>
                </TabItem>
                <TabItem Header="SeriazablePackage">
                    <avalonEdit:TextEditor
                        Name="SeriazablePackageTextEditor"
                        SyntaxHighlighting="C#"
                        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
                        FontFamily="Consolas"
                        IsReadOnly="True"
                        FontSize="10pt"/>
                </TabItem>
                <TabItem Header="Дополнительное инфо">
                    <avalonEdit:TextEditor
                        Name="AdditionalTextEditor"
                        SyntaxHighlighting="C#"
                        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
                        FontFamily="Consolas"
                        IsReadOnly="True"
                        FontSize="10pt"/>
                </TabItem>
            </TabControl>
        </Grid>
    </Grid>
</Window>
